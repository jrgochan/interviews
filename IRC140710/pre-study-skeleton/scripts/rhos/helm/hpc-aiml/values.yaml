# Default values for hpc-aiml chart
# This configures the AI/ML HPC environment

# Global settings
namespace: hpc-interview
nameOverride: ""
fullnameOverride: ""


# Image configuration
image:
  repository: image-registry.openshift-image-registry.svc:5000/hpc-interview/hpc-aiml
  pullPolicy: Always
  tag: "latest"

# Deployment configuration
deployment:
  name: aiml-workspace
  replicas: 1
  
# Init container configuration
initContainer:
  enabled: true
  name: workspace-init
  command: 
    - "/bin/bash"
  args:
    - "-c"
    - |
      echo "üöÄ Initializing AI/ML workspace..."
      if [ ! -f /workspace/.initialized ]; then
        echo "üìÇ Copying workspace files from container seed..."
        # Copy all project files from seed (inherited from hpc-base)
        cp -r /tmp/workspace-seed/* /workspace/ 2>/dev/null || true
        # Mark as initialized
        touch /workspace/.initialized
        echo "‚úÖ Workspace initialized successfully"
      else
        echo "‚úÖ Workspace already initialized"
      fi
      # OpenShift will handle permissions automatically
      echo "üèÅ InitContainer completed successfully"

# Container configuration
container:
  name: aiml-container
  command:
    - "/bin/bash"
  args:
    - "-c"
    - "while true; do sleep 30; done"
  ports:
    - containerPort: 8888
      name: jupyter
    - containerPort: 6006
      name: tensorboard

# Resource configuration
resources:
  requests:
    memory: "1Gi"
    cpu: "1000m"
  limits:
    memory: "4Gi"
    cpu: "2000m"

# Volume mounts
volumeMounts:
  - name: shared-workspace
    mountPath: /home/hpcuser/workspace
  - name: shared-data
    mountPath: /home/hpcuser/data

# Volumes
volumes:
  - name: shared-workspace
    persistentVolumeClaim:
      claimName: hpc-shared-workspace
  - name: shared-data
    persistentVolumeClaim:
      claimName: hpc-shared-data

# Environment variables
env:
  - name: JUPYTER_ENABLE_LAB
    value: "yes"
  - name: PYTHONPATH
    value: "/home/hpcuser/workspace"

# Service configuration
service:
  enabled: true
  name: aiml-service
  type: ClusterIP
  ports:
    - name: jupyter
      port: 8888
      targetPort: 8888
    - name: tensorboard
      port: 6006
      targetPort: 6006

# Route configuration for OpenShift
routes:
  jupyter:
    enabled: true
    name: jupyter-route
    targetPort: jupyter
    tls:
      termination: edge
  tensorboard:
    enabled: true
    name: tensorboard-route
    targetPort: tensorboard
    tls:
      termination: edge

# Security context
securityContext:
  runAsNonRoot: true

# Labels and selectors
labels:
  app: aiml-workspace
  component: ai-ml-demo

# Additional labels
additionalLabels: {}

# Annotations
annotations: {}

# Pod annotations
podAnnotations: {}
