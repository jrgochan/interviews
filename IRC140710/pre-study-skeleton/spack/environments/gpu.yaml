spack:
  specs:
  # GPU-enabled toolchain
  - gcc@11.3.0
  - cuda@11.8.0 +allow-unsupported-compilers
  - openmpi@4.1.4 +cuda +pmi fabrics=ucx schedulers=slurm
  
  # GPU-accelerated scientific libraries
  - hdf5@1.14.0 +mpi +fortran +cxx +hl +threadsafe
  - netcdf-c@4.9.2 +mpi +parallel-netcdf
  - fftw@3.3.10 +mpi +openmp precision=float,double
  
  # GPU-specific math libraries
  - magma@2.6.2 +cuda +fortran
  - suite-sparse@5.13.0 +cuda
  - hypre@2.25.0 +cuda +mpi +shared
  
  # GPU debugging and profiling tools
  - cuda-gdb
  - nsight-systems@2022.4.2
  - nsight-compute@2022.3.0
  
  # GPU-enabled Python packages for AI/ML
  - python@3.11.0 +optimizations
  - py-numpy@1.23.4 ^python@3.11.0
  - py-scipy@1.9.3 ^python@3.11.0
  - py-mpi4py@3.1.4 ^python@3.11.0
  - py-cupy@11.6.0 ^python@3.11.0 ^cuda@11.8.0
  - py-numba@0.57.1 ^python@3.11.0
  
  # Container support
  - apptainer@1.1.3 +suid
  
  view: false
  concretizer:
    unify: true
    reuse: true
    
  packages:
    all:
      compiler: [gcc@11.3.0]
      providers:
        mpi: [openmpi@4.1.4]
        blas: [openblas]
        lapack: [openblas]
        
    # GPU-specific configurations
    cuda:
      buildable: false
      externals:
      - spec: cuda@11.8.0
        prefix: /usr/local/cuda-11.8
        
    openmpi:
      variants: +cuda +pmi fabrics=ucx schedulers=slurm
      
  config:
    install_tree: $spack/opt/spack-gpu
    module_roots:
      tcl: $spack/share/spack/modules-gpu
    build_stage: $spack/var/spack/stage-gpu
    
  modules:
    default:
      enable: [tcl]
      tcl:
        hash_length: 0
        naming_scheme: '{name}/{version}'
        hierarchy: [mpi, cuda]
        core_compilers: [gcc@11.3.0]
        all:
          filter:
            exclude_implicits: true
          template: |
            {% block header %}
            #%Module1.0
            ## GPU-enabled module for {{ spec.format('{name}/{version}') }}
            {% endblock %}
            
            {% block gpu_setup %}
            {% if 'cuda' in spec %}
            setenv CUDA_HOME {{ spec['cuda'].prefix }}
            prepend-path CUDA_PATH {{ spec['cuda'].prefix }}
            {% endif %}
            {% endblock %}
            
            {% block environment %}
            {{ environment_modifications }}
            {% endblock %}
