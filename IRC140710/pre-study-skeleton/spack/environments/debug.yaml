spack:
  specs:
  # Debug-enabled toolchain
  - gcc@11.3.0 build_type=Debug
  - openmpi@4.1.4 +pmi +thread_multiple fabrics=ucx schedulers=slurm build_type=Debug
  
  # Core libraries with debug variants
  - hdf5@1.14.0 +mpi +fortran +cxx +hl +threadsafe build_type=Debug
  - netcdf-c@4.9.2 +mpi +parallel-netcdf build_type=Debug
  - fftw@3.3.10 +mpi +openmp precision=float,double build_type=Debug
  
  # Debugging and profiling tools
  - gdb@12.1 +python +tui
  - valgrind@3.19.0 +mpi +boost
  - strace@5.19
  - ltrace@0.7.3
  - intel-inspector@2022.3.0  # Memory/threading error checker
  - totalview@2022.1.16  # Commercial debugger (if available)
  
  # Memory debugging libraries
  - gperftools@2.10 +libunwind +frame_pointers
  - jemalloc@5.3.0 +stats +prof
  
  # Sanitizer-enabled builds (separate specs for testing)
  - openmpi@4.1.4~pmi build_type=Debug cppflags=-fsanitize=address
  
  # Performance analysis tools
  - tau@2.32 +mpi +python +pdt
  - scalasca@2.6 +mpi
  - scorep@7.1 +mpi +python
  
  # Container debugging support
  - apptainer@1.1.3 +suid
  - charliecloud@0.30
  
  # Python debugging ecosystem
  - python@3.11.0 +debug +optimizations
  - py-numpy@1.23.4 ^python@3.11.0
  - py-mpi4py@3.1.4 ^python@3.11.0
  - py-pytest@7.2.0 ^python@3.11.0
  - py-pdb-clone@1.10.1 ^python@3.11.0
  - py-memory-profiler@0.60.0 ^python@3.11.0
  - py-line-profiler@4.0.1 ^python@3.11.0
  
  view: false
  concretizer:
    unify: true
    reuse: false  # Don't reuse for debug builds
    
  packages:
    all:
      compiler: [gcc@11.3.0]
      providers:
        mpi: [openmpi@4.1.4]
      variants: build_type=Debug
      
    # Enable debugging symbols and disable optimization
    gcc:
      variants: +binutils +gold +ld +lto
      
    openmpi:
      variants: +pmi +thread_multiple fabrics=ucx schedulers=slurm build_type=Debug
      
    # Memory debugging configuration
    gperftools:
      variants: +libunwind +frame_pointers
      
    jemalloc:
      variants: +stats +prof
      
  config:
    install_tree: $spack/opt/spack-debug
    module_roots:
      tcl: $spack/share/spack/modules-debug
    build_stage: $spack/var/spack/stage-debug
    build_jobs: 4  # Slower builds with debug info
    
  modules:
    default:
      enable: [tcl]
      tcl:
        hash_length: 0
        naming_scheme: '{name}/{version}-debug'
        hierarchy: [mpi]
        core_compilers: [gcc@11.3.0]
        all:
          filter:
            exclude_implicits: true
          template: |
            {% block header %}
            #%Module1.0
            ## Debug build for {{ spec.format('{name}/{version}') }}
            ##
            ## Contains debugging symbols, reduced optimization
            {% endblock %}
            
            {% block debug_environment %}
            # Debug-specific environment
            setenv DEBUG_BUILD "1"
            setenv MALLOC_CHECK_ "2"
            setenv MALLOC_PERTURB_ "42"
            
            # Valgrind suppressions
            {% if 'valgrind' in spec %}
            setenv VALGRIND_LIB {{ spec['valgrind'].prefix.lib }}/valgrind
            {% endif %}
            
            # GDB settings
            {% if 'gdb' in spec %}
            setenv GDB_COMMAND {{ spec['gdb'].prefix.bin }}/gdb
            {% endif %}
            {% endblock %}
            
            {% block environment %}
            {{ environment_modifications }}
            {% endblock %}
